import maya.cmds as cmds


def MakeCOutliner():
    # Makes window
    mainWinName = "C.H. Outliner"

    # Checks if the window is made or not. If so then it deletes the old one and makes a new one. // not working bug #1
    if cmds.window(mainWinName, exists=True):
        cmds.deleteUI(mainWinName, window=True)

    # This makes the window item
    mainWin = cmds.window(mainWinName)

    # This makes the row columnLayout
    columnObj = cmds.columnLayout(parent=mainWin)
    rowObj = cmds.rowLayout(parent=columnObj, numberOfColumns=6)
    # These are the buttons to do stuff
    addItemsBtn = cmds.button(parent=rowObj, label="AddItems")
    removeItemsBtn = cmds.button(parent=rowObj, label="RemoveItems")
    removeAllBtn = cmds.button(parent=rowObj, label="Clear")
    sortBtn = cmds.button(parent=rowObj, label="Sort")
    moveUpBtn = cmds.button(parent=rowObj, label="MoveUp")
    moveDownBtn = cmds.button(parent=rowObj, label="MoveDown")
    # This makes the text scroll list to hold the items
    scrollList = cmds.textScrollList(ams=True, parent=columnObj,dcc=lambda *args: SelectAllOnDouble(scrollList), selectCommand=lambda *args: Select(scrollList))

    cmds.button(addItemsBtn, e=True, c=lambda *args: AddItems(scrollList))
    cmds.button(removeItemsBtn, e=True, c=lambda *args: RemoveItems(scrollList))
    cmds.button(removeAllBtn, e=True, c=lambda *args: Clear(scrollList))
    cmds.button(sortBtn, e=True, c=lambda *args: SortAlpha(scrollList))
    cmds.button(moveUpBtn, e=True, c=lambda *args: ListUp(scrollList))
    cmds.button(moveDownBtn, e=True, c=lambda *args: ListDown(scrollList))
    
    # This makes the window visible
    cmds.showWindow(mainWin)

def Select(scrollList):
    selectedListItems=cmds.textScrollList(scrollList, q=True, si=True)
    cmds.select(selectedListItems)
def AddItems(scrollList):
    sels = cmds.ls(sl=True)
    cmds.textScrollList(scrollList, e=True, a=sels)
    getAllInList = cmds.textScrollList(scrollList, q=True, ai = True)
    cmds.textScrollList(scrollList, e=True, ra = True)
    singleItemList = list(set(getAllInList))
    cmds.textScrollList(scrollList, e=True, a=singleItemList)
def RemoveItems(scrollList):
    sels = cmds.ls(sl=True)
    cmds.textScrollList(scrollList, e=True, ri=sels)
def Clear(scrollList):
	sels = cmds.ls(sl=True)
	cmds.textScrollList(scrollList, e=True, ra = True)
def SortAlpha(scrollList):
	getAllInList = cmds.textScrollList(scrollList, q=True, ai = True)
	cmds.textScrollList(scrollList, e=True, ra = True)
	sortedList = sorted(getAllInList)
	cmds.textScrollList(scrollList, e=True, a = sortedList)
def SelectAllOnDouble(scrollList):
	getAllInList = cmds.textScrollList(scrollList, q=True, ai=True)
	cmds.textScrollList(scrollList, e=True, si = getAllInList)
def ListUp(scrollList):
	getAllInList = cmds.textScrollList(scrollList, q=True, ai = True)

	cmds.textScrollList(scrollList, e=True, ra = True)
	sels = cmds.ls(sl = True)

	for i in range(len(sels)):
		currentIndex = getAllInList.index(sels[i])
		forwardItem = getAllInList[(currentIndex - 1)]
		getAllInList[(currentIndex - 1)] = getAllInList[currentIndex]
		getAllInList[currentIndex] = forwardItem
	cmds.textScrollList(scrollList, e=True, a = getAllInList)
def ListDown(scrollList):
	getAllInList = cmds.textScrollList(scrollList, q=True, ai = True)

	cmds.textScrollList(scrollList, e=True, ra = True)
	sels = cmds.ls(sl = True)

	for i in range(len(sels)):
		currentIndex = getAllInList.index(sels[i])
		print(currentIndex + 1)
		if(len(getAllInList) > (currentIndex + 1)):
			forwardItem = getAllInList[(currentIndex + 1)]
			getAllInList[(currentIndex + 1)] = getAllInList[currentIndex]
			getAllInList[currentIndex] = forwardItem
	cmds.textScrollList(scrollList, e=True, a = getAllInList)
MakeCOutliner()
